%!PS-Adobe-2.0
%%Title: fig_NCA_comparison.eps
%%Creator: gnuplot 5.2 patchlevel 3
%%CreationDate: Thu May 31 17:35:25 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fig_NCA_comparison.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 3)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 31 17:35:25 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
888 768 M
63 0 V
5816 0 R
-63 0 V
stroke
744 768 M
[ [(Helvetica) 240.0 0.0 true true 0 (-6)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
888 1440 M
63 0 V
5816 0 R
-63 0 V
stroke
744 1440 M
[ [(Helvetica) 240.0 0.0 true true 0 (-5)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
888 2112 M
63 0 V
5816 0 R
-63 0 V
stroke
744 2112 M
[ [(Helvetica) 240.0 0.0 true true 0 (-4)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
888 2784 M
63 0 V
5816 0 R
-63 0 V
stroke
744 2784 M
[ [(Helvetica) 240.0 0.0 true true 0 (-3)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
888 3455 M
63 0 V
5816 0 R
-63 0 V
stroke
744 3455 M
[ [(Helvetica) 240.0 0.0 true true 0 (-2)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
888 4127 M
63 0 V
5816 0 R
-63 0 V
stroke
744 4127 M
[ [(Helvetica) 240.0 0.0 true true 0 (-1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
888 4799 M
63 0 V
5816 0 R
-63 0 V
stroke
744 4799 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
888 768 M
0 63 V
0 3968 R
0 -63 V
stroke
888 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2064 768 M
0 63 V
0 3968 R
0 -63 V
stroke
2064 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3240 768 M
0 63 V
0 3968 R
0 -63 V
stroke
3240 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4415 768 M
0 63 V
0 3968 R
0 -63 V
stroke
4415 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5591 768 M
0 63 V
0 3968 R
0 -63 V
stroke
5591 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3968 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
888 4799 N
888 768 L
5879 0 V
0 4031 V
-5879 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
216 2783 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (ln\(-G\(p=0, )]
[(Symbol) 240.0 0.0 true true 0 (t)]
[(Helvetica) 240.0 0.0 true true 0 (\)\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3827 168 M
[ [(Symbol) 240.0 0.0 true true 0 (t)]
] -80.0 MCshow
LTb
% Begin plot #1
2.000 UP
4.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5696 4616 M
[ [(Helvetica) 240.0 0.0 true true 0 (stoch. list)]
] -80.0 MRshow
2.000 UP
4.000 UL
LTb
0.58 0.00 0.83 C 5840 4616 M
639 0 V
-639 31 R
0 -62 V
639 62 R
0 -62 V
903 4744 M
-15 0 R
46 0 V
-46 0 R
46 0 V
86 -298 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
87 -181 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
86 -131 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
87 -106 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
87 -93 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
86 -85 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
87 -80 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
86 -78 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
87 -77 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
86 -76 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
87 -77 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
87 -77 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
86 -77 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
87 -78 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
86 -79 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
87 -79 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
87 -80 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
86 -80 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
87 -82 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
86 -82 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
87 -83 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
86 -83 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
87 -85 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
87 -85 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
86 -86 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
87 -87 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
86 -88 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
87 -89 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
87 -89 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
86 -90 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
87 -92 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
86 -92 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
87 -93 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
86 -93 R
0 28 V
-31 -28 R
62 0 V
-62 28 R
62 0 V
87 -95 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
87 -96 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
86 -96 R
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
87 -97 R
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
86 -97 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
87 -98 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
stroke 5637 1611 M
86 -100 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
87 -100 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
87 -101 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
86 -103 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
87 -102 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
86 -104 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
87 -105 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
87 -105 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
86 -106 R
0 41 V
-31 -41 R
62 0 V
-62 41 R
62 0 V
903 4744 Pls
1020 4446 Pls
1138 4267 Pls
1255 4137 Pls
1373 4033 Pls
1491 3944 Pls
1608 3863 Pls
1726 3787 Pls
1843 3715 Pls
1961 3645 Pls
2078 3576 Pls
2196 3508 Pls
2314 3440 Pls
2431 3373 Pls
2549 3307 Pls
2666 3240 Pls
2784 3174 Pls
2902 3108 Pls
3019 3042 Pls
3137 2976 Pls
3254 2910 Pls
3372 2844 Pls
3489 2779 Pls
3607 2713 Pls
3725 2647 Pls
3842 2581 Pls
3960 2515 Pls
4077 2449 Pls
4195 2384 Pls
4313 2318 Pls
4430 2252 Pls
4548 2186 Pls
4665 2121 Pls
4783 2055 Pls
4900 1989 Pls
5018 1923 Pls
5136 1857 Pls
5253 1791 Pls
5371 1726 Pls
5488 1660 Pls
5606 1594 Pls
5723 1528 Pls
5841 1463 Pls
5959 1397 Pls
6076 1331 Pls
6194 1265 Pls
6311 1199 Pls
6429 1134 Pls
6547 1068 Pls
6664 1003 Pls
6159 4616 Pls
% End plot #1
% Begin plot #2
4.000 UL
LTb
0.58 0.00 0.83 C 903 4744 M
29 -95 V
29 -77 V
30 -67 V
29 -59 V
30 -52 V
29 -46 V
29 -43 V
30 -38 V
29 -36 V
30 -33 V
29 -32 V
29 -29 V
30 -28 V
29 -26 V
30 -25 V
29 -25 V
29 -23 V
30 -23 V
29 -22 V
30 -21 V
29 -21 V
29 -20 V
30 -20 V
29 -20 V
30 -19 V
29 -19 V
29 -19 V
30 -19 V
29 -18 V
30 -18 V
29 -18 V
29 -18 V
30 -18 V
29 -18 V
30 -17 V
29 -17 V
29 -18 V
30 -17 V
29 -17 V
29 -17 V
30 -17 V
29 -17 V
30 -17 V
29 -17 V
29 -17 V
30 -17 V
29 -17 V
30 -17 V
29 -16 V
29 -17 V
30 -17 V
29 -17 V
30 -16 V
29 -17 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -17 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -17 V
29 -16 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -16 V
29 -17 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -16 V
29 -17 V
30 -16 V
29 -17 V
30 -16 V
29 -17 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -16 V
30 -17 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
30 -16 V
29 -16 V
30 -17 V
29 -16 V
29 -17 V
% End plot #2
% Begin plot #3
stroke
LTb
0.00 0.62 0.45 C LCb setrgbcolor
5696 4376 M
[ [(Helvetica) 240.0 0.0 true true 0 (NCA)]
] -80.0 MRshow
4.000 UL
LTb
0.00 0.62 0.45 C 5840 4376 M
639 0 V
888 4799 M
0 -1 V
0 -1 V
1 0 V
0 -1 V
0 -1 V
0 -1 V
0 -1 V
1 -1 V
0 -1 V
0 -1 V
0 -1 V
1 -1 V
0 -1 V
0 -1 V
0 -1 V
1 -1 V
0 -1 V
0 -1 V
0 -1 V
1 -1 V
0 -2 V
0 -1 V
1 -1 V
0 -2 V
0 -2 V
1 -1 V
0 -2 V
1 -2 V
0 -2 V
1 -2 V
1 -3 V
0 -2 V
1 -3 V
1 -2 V
0 -3 V
1 -3 V
1 -4 V
1 -3 V
1 -4 V
1 -4 V
2 -4 V
1 -4 V
1 -4 V
2 -5 V
1 -5 V
2 -6 V
1 -5 V
2 -6 V
2 -7 V
2 -6 V
3 -7 V
2 -7 V
3 -8 V
3 -8 V
3 -9 V
3 -8 V
3 -10 V
4 -9 V
4 -10 V
4 -11 V
4 -11 V
5 -12 V
5 -12 V
5 -12 V
6 -13 V
6 -14 V
6 -14 V
7 -14 V
8 -15 V
8 -16 V
8 -16 V
9 -16 V
10 -17 V
10 -18 V
11 -18 V
12 -18 V
13 -19 V
13 -20 V
14 -20 V
16 -20 V
16 -21 V
18 -21 V
18 -21 V
20 -22 V
21 -23 V
23 -23 V
24 -23 V
26 -24 V
28 -25 V
30 -25 V
31 -26 V
34 -26 V
36 -28 V
38 -28 V
42 -29 V
43 -30 V
47 -31 V
50 -33 V
54 -34 V
57 -35 V
61 -37 V
65 -40 V
70 -41 V
74 -44 V
79 -46 V
85 -49 V
90 -52 V
97 -55 V
103 -59 V
110 -62 V
118 -67 V
126 -70 V
134 -76 V
143 -81 V
153 -86 V
164 -92 V
174 -98 V
187 -104 V
199 -112 V
213 -120 V
227 -127 V
242 -136 V
259 -146 V
277 -155 V
295 -166 V
316 -177 V
337 -189 V
360 -202 V
6767 935 L
% End plot #3
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
888 4799 N
888 768 L
5879 0 V
0 4031 V
-5879 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
